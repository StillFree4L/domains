select * from repairs

CREATE TABLE IF NOT EXISTS public.repairs
(
    id serial NOT NULL,
	receipt integer NOT NULL,
	date DATE NOT NULL DEFAULT CURRENT_DATE,
	client character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	phone CHARACTER VARYING(30) NOT NULL COLLATE pg_catalog."C.UTF-8",
	service_name CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	equipment CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	serial_id CHARACTER VARYING(100) NOT NULL COLLATE pg_catalog."C.UTF-8",
	facilities CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	problem CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	username character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	money integer NOT NULL DEFAULT 0,
	result_name character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	primary key (id)
);
ALTER TABLE public.repairs
    OWNER to postgres;

select * from services

CREATE TABLE IF NOT EXISTS public.services
(
    id serial NOT NULL,
	service CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8" UNIQUE,
	primary key (id,service)
);
ALTER TABLE public.services
    OWNER to postgres;

INSERT INTO services (service) VALUES ('Диагностика, Настройка');
INSERT INTO services (service) VALUES ('Профилактика, Чистка, Смазка');
INSERT INTO services (service) VALUES ('Ремонт, Замена, Установка');


select * from results

CREATE TABLE IF NOT EXISTS public.results
(
    id serial NOT NULL,
	result CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8" UNIQUE,
	primary key (id,result)
);
ALTER TABLE public.results
    OWNER to postgres;

INSERT INTO results (result) VALUES ('Отказ от услуг');
INSERT INTO results (result) VALUES ('Завершен');


CREATE TABLE IF NOT EXISTS public.master
(
    id serial NOT NULL,
    name CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
    role CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
    PRIMARY KEY (id)
);
ALTER TABLE public.master
    OWNER to postgres;

INSERT INTO master (name) VALUES ('Курбанов Б.А.');

select * from public.user

CREATE TABLE IF NOT EXISTS public.user
(
    id serial NOT NULL,
    username CHARACTER VARYING(255) NOT NULL UNIQUE COLLATE pg_catalog."C.UTF-8",
	auth_key CHARACTER VARYING(32) NOT NULL COLLATE pg_catalog."C.UTF-8",
	password_hash CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
    password_reset_token CHARACTER VARYING(255) UNIQUE COLLATE pg_catalog."C.UTF-8",
	email CHARACTER VARYING(255) NOT NULL UNIQUE COLLATE pg_catalog."C.UTF-8",
	status smallint NOT NULL DEFAULT 10,
	created_at integer NOT NULL,
	updated_at integer NOT NULL,
    PRIMARY KEY (id)
);
ALTER TABLE public.user
    OWNER to postgres;

INSERT INTO public.user (username,auth_key,password_hash,email,status,created_at,updated_at) 
VALUES ('Разработчик','C3pJhlw8_8w6FoIOwOrzmqmF1kx1kp1V','$2y$13$i06.rAzFGX7AcfeX6x8bWObgNznT/e5W2xsOKRDNj8OABa.N.6z96',
		'admin@mail.ru',10,1625718672,1625718672);

CREATE TABLE repairs_audit(
	id serial  NOT NULL,
	operation char(1) NOT NULL,
	changed_on TIMESTAMP(6) NOT NULL,
	receipt integer NOT NULL,
	date DATE NOT NULL DEFAULT CURRENT_DATE,
	client character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	phone CHARACTER VARYING(30) NOT NULL COLLATE pg_catalog."C.UTF-8",
	service_name CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	equipment CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	serial_id CHARACTER VARYING(100) NOT NULL COLLATE pg_catalog."C.UTF-8",
	facilities CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	problem CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	username character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	money integer NOT NULL DEFAULT 0,
	result_name character varying(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	primary key (id)
);
ALTER TABLE public.repairs_audit
    OWNER to postgres;

CREATE OR REPLACE FUNCTION process_repairs_audit() RETURNS TRIGGER AS $repairs_audit$
    BEGIN
        IF (TG_OP = 'DELETE') THEN
			INSERT INTO repairs_audit(receipt,date,client,phone,service_name,equipment,serial_id,facilities,problem,username,money,result_name,changed_on,operation)
		 	VALUES(OLD.receipt,OLD.date,OLD.client,OLD.phone,OLD.service_name,OLD.equipment,OLD.serial_id,OLD.facilities,OLD.problem,OLD.username,OLD.money,OLD.result_name,now(),'D');
            RETURN OLD;
        ELSIF (TG_OP = 'UPDATE') THEN
			INSERT INTO repairs_audit(receipt,date,client,phone,service_name,equipment,serial_id,facilities,problem,username,money,result_name,changed_on,operation)
		 	VALUES(OLD.receipt,OLD.date,OLD.client,OLD.phone,OLD.service_name,OLD.equipment,OLD.serial_id,OLD.facilities,OLD.problem,OLD.username,OLD.money,OLD.result_name,now(),'U');
			RETURN NEW;
        ELSIF (TG_OP = 'INSERT') THEN
            INSERT INTO repairs_audit(receipt,date,client,phone,service_name,equipment,serial_id,facilities,problem,username,money,result_name,changed_on,operation)
		 	VALUES(NEW.receipt,NEW.date,NEW.client,NEW.phone,NEW.service_name,NEW.equipment,NEW.serial_id,NEW.facilities,NEW.problem,NEW.username,NEW.money,NEW.result_name,now(),'I');
			RETURN NEW;
        END IF;
        RETURN NULL; -- возвращаемое значение для триггера AFTER игнорируется
    END;
$repairs_audit$ LANGUAGE plpgsql;

CREATE TRIGGER repairs_audit
AFTER INSERT OR UPDATE OR DELETE ON repairs
    FOR EACH ROW EXECUTE PROCEDURE process_repairs_audit();

select * from repairs_audit;

DROP TRIGGER repairs_audit ON repairs;
DROP FUNCTION process_repairs_audit();


CREATE TABLE IF NOT EXISTS public.sertificat
(
    id serial NOT NULL,
    name CHARACTER VARYING(255) NOT NULL COLLATE pg_catalog."C.UTF-8",
	changed_on data(6),
    PRIMARY KEY (id)
);
ALTER TABLE public.sertificat
    OWNER to postgres;


INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat1.jpg');
INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat2.jpg');
INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat3.jpeg');
INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat4.jpeg');
INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat5.jpeg');
INSERT INTO sertificat (name) VALUES ('img/sertificat/sertificat6.jpeg');


php yii migrate
php yii migrate/up --migrationPath=@vendor/costa-rico/yii2-images/migrations
php yii migrate/up --migrationPath=@vendor/lav45/yii2-activity-logger/migrations
php yii migrate --migrationPath=@yii/rbac/migrations/
php yii rbac-start/init

admin admin2709